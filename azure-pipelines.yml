# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'Windows-latest'

variables:
  solution: '**/*.sln'
  PackageFeedEndpoint: 'https://pkgs.dev.azure.com/ramiMSFTDevOps/PsRepository/_packaging/PsRepositoryFeed/nuget/v2'
  PackageFeedEndpointCredential: '{"endpointCredentials": [{"endpoint":"$(PackageFeedEndpoint)", "username":"Admin", "password":"$(AZURE_DEVOPS_PAT)"}]}'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- powershell: |
    dir $HOME\Documents\PowerShell\Modules
    echo "==========="
    dir $env:ProgramFiles\PowerShell\Modules
  displayName: Path

- powershell: |
    if ($env:SYSTEM_DEBUG -eq "true") {
        Set-PSDebug -Trace 2

        $InformationPreference = "Continue"
        $VerbosePreference = "Continue"
        $DebugPreference = "Continue"
    }
    Register-PSRepository -Name "psRepoPipeline" -SourceLocation '$(PackageFeedEndpoint)' -InstallationPolicy Trusted
  displayName: 'Register Azure Artifacts Feed as PSRepository'
  env:
    VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: $(PackageFeedEndpointCredential)

- powershell: |
     echo (Get-PSRepository)
  displayName: Get-PSRepository

- powershell: |
    Find-Module -Name "Get-Hello" | Install-Module -Confirm:$false -Force
    Get-Hello
  displayName: 'Install and run the Get-Hello PowerShell module'
  env:
    VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: $(PackageFeedEndpointCredential)